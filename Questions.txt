Questions

Use cases
1. compare various alternatives for a single title to pick the best approach
2. compare various technologies for a single title to determine when to use each
3. compare the best ways to handle titles of different types to see how they should be handled
4. Look at various actual instances of a plan to see what an actual demand pattern (or many demand patterns) might look like

To-do
1. link lead times to printing technologies
2. Evaluate multiple technologies over the life of a title (scalloped technology curves with breakeven points)
	a.  alternatives
		a. conventional domestic
		b. international or EMP
		c. digital printing
		d. single unit digital printing
	b. approach
		1. put in a UMC/VMC for every choice
			{"tech_name": "POD", "FMC" : 0, "VMC" : 5.00, "weeks_lead_time" : 1}
			# this will eventually be replaced with a spec look up and potentially use price breaks
		2. have plan select the best for every print order, calc_print_qty()
			a. use one function for months supply
			b. use another function for EOQ
			c. have a flag that determines which one
		3. output different order streams for each technology
3. split calc_orders from calc_print_qty from calc_inventory levels from calc_costs


-------- old ones -----------

1. I don't think my classes are dependent on one another: Title_Demand_Plan should pull on a Title object, not a string "title"
2. The higher level class should have as a property, something generated by the subclass: Demand Plan should have an available
	forecast generated by subclass Title_Demand_Plan that can be used by the other subclass Title_Returns_Plan

--------- old ones ----------
1. How do I get the figures to reset without showing them?
	> Use figure()
	> look into clear function
2. How do I move "generate_presentation.py" to root and import modules correctly?
	> Hacked it
3. What should the class structure look like?
4. Any good way to consolidate functions?
5. Should the plotting be separate from the other class methods, or just pile them all in together?
6. Data structures for plan alternatives?  Should they be classes on their own?

------------------
